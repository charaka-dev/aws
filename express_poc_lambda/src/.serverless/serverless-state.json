{
  "service": {
    "service": "awd-web-hook-service",
    "serviceObject": {
      "name": "awd-web-hook-service"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "stage": "dev",
      "region": "us-east-1",
      "logs": {
        "apiGateway": true
      },
      "tracing": {
        "apiGateway": true,
        "lambda": true
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "HelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/awd-web-hook-service-dev-hello"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "awd-web-hook-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/awd-web-hook-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/awd-web-hook-service-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords"
                        ],
                        "Resource": [
                          "*"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "awd-web-hook-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "HelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/awd-web-hook-service/dev/1727604157648-2024-09-29T10:02:37.648Z/awd-web-hook-service.zip"
              },
              "Handler": "handler.hello",
              "Runtime": "nodejs20.x",
              "FunctionName": "awd-web-hook-service-dev-hello",
              "MemorySize": 1024,
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "USER_POOL_ID": {
                    "Ref": "UserPool"
                  },
                  "CLIENT_ID": {
                    "Ref": "UserPoolClient"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HelloLogGroup"
            ]
          },
          "HelloLambdaVersiondBSQBSTBGzb3v4BhPrXWF9TAK4Fle4NevUji0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloLambdaFunction"
              },
              "CodeSha256": "9wI5oWiynORwx5leZV2FWtGDMMZgUrxg4y0tNeeMklY="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-awd-web-hook-service",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceHello": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "hello",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodHelloGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHello"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "ApiGatewayAuthorizer"
              },
              "AuthorizationScopes": [
                "awd.datacom.com/write"
              ],
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HelloLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "HelloLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1727604155392": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodHelloGet"
            ]
          },
          "HelloLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HelloLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "Name": "awd_authoriser",
              "Type": "COGNITO_USER_POOLS",
              "IdentitySource": "method.request.header.Authorization",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ProviderARNs": [
                {
                  "Fn::GetAtt": [
                    "UserPool",
                    "Arn"
                  ]
                }
              ]
            }
          },
          "AwdResourceServer": {
            "Type": "AWS::Cognito::UserPoolResourceServer",
            "Properties": {
              "UserPoolId": {
                "Ref": "UserPool"
              },
              "Identifier": "awd.datacom.com",
              "Name": "AWD API",
              "Scopes": [
                {
                  "ScopeName": "write",
                  "ScopeDescription": "Write access"
                }
              ]
            }
          },
          "UserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "awd-web-hook-service-dev-user-pool",
              "AutoVerifiedAttributes": [
                "email"
              ],
              "UsernameAttributes": [
                "email"
              ]
            }
          },
          "UserPoolDomain": {
            "Type": "AWS::Cognito::UserPoolDomain",
            "Properties": {
              "Domain": "awd-web-hook-service-dev-domain",
              "UserPoolId": {
                "Ref": "UserPool"
              }
            }
          },
          "UserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "DependsOn": [
              "AwdResourceServer"
            ],
            "Properties": {
              "ClientName": "awd-web-hook-service-dev-client",
              "UserPoolId": {
                "Ref": "UserPool"
              },
              "GenerateSecret": true,
              "ExplicitAuthFlows": [
                "ALLOW_REFRESH_TOKEN_AUTH",
                "ALLOW_USER_SRP_AUTH"
              ],
              "AllowedOAuthFlows": [
                "client_credentials"
              ],
              "AllowedOAuthFlowsUserPoolClient": true,
              "AllowedOAuthScopes": [
                "awd.datacom.com/write"
              ],
              "CallbackURLs": [
                "http://localhost:3000/callback"
              ],
              "LogoutURLs": [
                "http://localhost:3000/logout"
              ],
              "SupportedIdentityProviders": [
                "COGNITO"
              ]
            }
          },
          "GatewayResponseDefault4XX": {
            "Type": "AWS::ApiGateway::GatewayResponse",
            "Properties": {
              "ResponseParameters": {
                "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                "gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
              },
              "ResponseType": "DEFAULT_4XX",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-awd-web-hook-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "HelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloLambdaVersiondBSQBSTBGzb3v4BhPrXWF9TAK4Fle4NevUji0"
            },
            "Export": {
              "Name": "sls-awd-web-hook-service-dev-HelloLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-awd-web-hook-service-dev-ServiceEndpoint"
            }
          },
          "UserPoolId": {
            "Value": {
              "Ref": "UserPool"
            }
          },
          "UserPoolClientId": {
            "Value": {
              "Ref": "UserPoolClient"
            }
          },
          "CognitoDomain": {
            "Value": {
              "Fn::Sub": "https://${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com"
            }
          },
          "TokenUrl": {
            "Value": {
              "Fn::Sub": "https://${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com/oauth2/token"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "serverless-offline": {
        "httpPort": 3000
      }
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "hello": {
        "handler": "handler.hello",
        "events": [
          {
            "http": {
              "path": "hello",
              "method": "get",
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "managedExternally": false,
                "authorizerId": {
                  "Ref": "ApiGatewayAuthorizer"
                },
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": [],
                "scopes": [
                  "awd.datacom.com/write"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "environment": {
          "USER_POOL_ID": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HelloLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"USER_POOL_ID\"]"
          },
          "CLIENT_ID": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HelloLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"CLIENT_ID\"]"
          }
        },
        "name": "awd-web-hook-service-dev-hello",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "HelloLambdaVersiondBSQBSTBGzb3v4BhPrXWF9TAK4Fle4NevUji0"
      }
    },
    "resources": {
      "Resources": {
        "ApiGatewayAuthorizer": {
          "Type": "AWS::ApiGateway::Authorizer",
          "Properties": {
            "Name": "awd_authoriser",
            "Type": "COGNITO_USER_POOLS",
            "IdentitySource": "method.request.header.Authorization",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ProviderARNs": [
              {
                "Fn::GetAtt": [
                  "UserPool",
                  "Arn"
                ]
              }
            ]
          }
        },
        "AwdResourceServer": {
          "Type": "AWS::Cognito::UserPoolResourceServer",
          "Properties": {
            "UserPoolId": {
              "Ref": "UserPool"
            },
            "Identifier": "awd.datacom.com",
            "Name": "AWD API",
            "Scopes": [
              {
                "ScopeName": "write",
                "ScopeDescription": "Write access"
              }
            ]
          }
        },
        "UserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "awd-web-hook-service-dev-user-pool",
            "AutoVerifiedAttributes": [
              "email"
            ],
            "UsernameAttributes": [
              "email"
            ]
          }
        },
        "UserPoolDomain": {
          "Type": "AWS::Cognito::UserPoolDomain",
          "Properties": {
            "Domain": "awd-web-hook-service-dev-domain",
            "UserPoolId": {
              "Ref": "UserPool"
            }
          }
        },
        "UserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "DependsOn": [
            "AwdResourceServer"
          ],
          "Properties": {
            "ClientName": "awd-web-hook-service-dev-client",
            "UserPoolId": {
              "Ref": "UserPool"
            },
            "GenerateSecret": true,
            "ExplicitAuthFlows": [
              "ALLOW_REFRESH_TOKEN_AUTH",
              "ALLOW_USER_SRP_AUTH"
            ],
            "AllowedOAuthFlows": [
              "client_credentials"
            ],
            "AllowedOAuthFlowsUserPoolClient": true,
            "AllowedOAuthScopes": [
              "awd.datacom.com/write"
            ],
            "CallbackURLs": [
              "http://localhost:3000/callback"
            ],
            "LogoutURLs": [
              "http://localhost:3000/logout"
            ],
            "SupportedIdentityProviders": [
              "COGNITO"
            ]
          }
        },
        "GatewayResponseDefault4XX": {
          "Type": "AWS::ApiGateway::GatewayResponse",
          "Properties": {
            "ResponseParameters": {
              "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
              "gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
            },
            "ResponseType": "DEFAULT_4XX",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        }
      },
      "Outputs": {
        "UserPoolId": {
          "Value": {
            "Ref": "UserPool"
          }
        },
        "UserPoolClientId": {
          "Value": {
            "Ref": "UserPoolClient"
          }
        },
        "CognitoDomain": {
          "Value": {
            "Fn::Sub": "https://${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com"
          }
        },
        "TokenUrl": {
          "Value": {
            "Fn::Sub": "https://${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com/oauth2/token"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "awd-web-hook-service",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "D:\\Charaka\\Workspace\\aws\\lambda\\express_poc_lambda\\src\\.serverless\\awd-web-hook-service.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/awd-web-hook-service/dev/1727604157648-2024-09-29T10:02:37.648Z",
    "artifact": "awd-web-hook-service.zip"
  }
}